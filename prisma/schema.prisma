// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Status {
  COMPLETED
  PROSES
  CANCELED
}

enum Size {
  Small
  Medium
  Large
}

enum TypeCoffe {
  Expresso
  Americano
  LongBlack
  Cappucino
  CoffeLatte
  MoccaLatte
  Afogato
  ColdBrew
  Macchiato
}

model User {
  id                 String        @id @unique @default(cuid())
  fullname           String
  username           String
  mobilePhone        String
  email              String
  password           String
  linkProfilePicture String?
  address            String?
  balance            Int           @default(0)
  income             Int           @default(0)
  outcome            Int           @default(0)
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  Transaction        Transaction[]
  Cart               Cart[]
  favorite           Favorite[]
  Purchased          Purchased[]
}

model Favorite {
  id      String @id @default(cuid())
  idUser  String
  idCoffe String
  User    User   @relation(fields: [idUser], references: [id])
  Coffe   Coffe  @relation(fields: [idCoffe], references: [id])
}

model Purchased {
  id      String @id @default(cuid())
  idUser  String
  idCoffe String
  balance Int
  User    User   @relation(fields: [idUser], references: [id])
  Coffe   Coffe  @relation(fields: [idCoffe], references: [id])
}

model Coffe {
  id          String        @id @default(cuid())
  name        String
  description String
  price       Int
  linkPicture String
  type        TypeCoffe
  Transaction Transaction[]
  Cart        Cart[]
  favorite    Favorite[]
  Purchased   Purchased[]
}

model Transaction {
  id        String   @default(cuid())
  idCart    String
  idCoffe   String
  idUser    String
  title     String
  status    Status
  balance   Int
  User      User     @relation(fields: [idUser], references: [id])
  Coffe     Coffe    @relation(fields: [idCoffe], references: [id])
  createdAt DateTime @default(now())

  @@id([idCart, id])
}

model Cart {
  id        String   @id @default(cuid())
  idUser    String
  idCoffe   String
  quantity  Int
  size      Size
  User      User     @relation(fields: [idUser], references: [id])
  Coffe     Coffe    @relation(fields: [idCoffe], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
